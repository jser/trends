// LICENSE : MIT
"use strict";
exports.__esModule = true;

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var JSerWeek = (function () {
    function JSerWeek(currentPost, prevPost, algoItem) {
        _classCallCheck(this, JSerWeek);

        /** @type {number} */
        this.weekNumber = currentPost.postNumber;
        /** @type {Date} */
        this.beginDate = prevPost ? prevPost.date : null;
        /** @type {Date} */
        this.endDate = currentPost.date;
        /** @type {JSerPost} */
        this.post = currentPost;
        /** @type {JSerItem[]} */
        this._items = [];
        this._algoItem = algoItem;
    }

    _createClass(JSerWeek, [{
        key: "items",
        get: function () {
            if (this._items.length === 0) {
                var pastDate = new Date(1995, 11, 17);
                this._items = this._algoItem.findItemsBetween(this.beginDate || pastDate, this.endDate);
            }
            return this._items;
        }
    }]);

    return JSerWeek;
})();

exports["default"] = JSerWeek;
module.exports = exports["default"];
//# sourceMappingURL=JSerWeek.js.map