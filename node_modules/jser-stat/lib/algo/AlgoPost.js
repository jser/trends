// LICENSE : MIT
"use strict";
exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _algoSearchJs = require("./algoSearch.js");

// for algorithm

var AlgoPost = (function () {
    /**
     *
     * @param {JSerPost[]} posts
     */

    function AlgoPost(posts) {
        _classCallCheck(this, AlgoPost);

        this.posts = posts;
        /**
         * @type number[] 昇順となった各Postのtime配列
         */
        this.postTimeIndex = posts.map(function (post) {
            return post.date.getTime();
        });
    }

    /**
     *
     * @param {Date} beginDate
     * @param {Date} endDate
     * @returns {JSerPost[]}
     */

    AlgoPost.prototype.findPostsBetween = function findPostsBetween(beginDate, endDate) {
        var indexes = (0, _algoSearchJs.findIndexesBetween)(this.postTimeIndex, beginDate, endDate);
        var first = indexes[0];
        var last = indexes[indexes.length - 1];

        if (indexes.length === 0) {
            return [];
        }
        // [1, 0] or [ 1, -1]
        if (first > last && last <= 0) {
            return [];
        }
        // [1, 10]
        return this.posts.slice(first, last + 1);
    };

    return AlgoPost;
})();

exports["default"] = AlgoPost;
module.exports = exports["default"];
//# sourceMappingURL=AlgoPost.js.map