// LICENSE : MIT
"use strict";
exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _algoSearchJs = require("./algoSearch.js");

// for algorithm

var AlgoItem = (function () {
    /**
     *
     * @param {JSerItem[]} items
     */

    function AlgoItem(items) {
        _classCallCheck(this, AlgoItem);

        this.items = items;
        /**
         * @type number[] 昇順となった各Itemのtime配列
         */
        this.itemTimes = items.map(function (item) {
            return item.date.getTime();
        });
    }

    /**
     *
     * @param {Date} beginDate
     * @param {Date} endDate
     * @returns {JSerItem[]}
     */

    AlgoItem.prototype.findItemsBetween = function findItemsBetween(beginDate, endDate) {
        var indexes = (0, _algoSearchJs.findIndexesBetween)(this.itemTimes, beginDate, endDate);
        var first = indexes[0];
        var last = indexes[indexes.length - 1];
        if (indexes.length === 0) {
            return [];
        }
        if (first > last) {
            return [];
        }
        return this.items.slice(first, last + 1);
    };

    return AlgoItem;
})();

exports["default"] = AlgoItem;
module.exports = exports["default"];
//# sourceMappingURL=AlgoItem.js.map