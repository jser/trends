{"version":3,"sources":["../../src/data/install-hook.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;AACb,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,SAAS,WAAW,CAAC,GAAG,EAAE;AACtB,WAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,YAAI,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE;AACzB,gBAAI,IAAI,GAAG,EAAE,CAAC;AACd,eAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAExB,eAAG,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE;AAC5B,oBAAI,IAAI,KAAK,CAAC;aACjB,CAAC,CAAC;AACH,eAAG,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE;AACzB,uBAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;aACzB,CAAC,CAAC;SACN,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;AACxB,kBAAM,CAAC,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;SACrC,CAAC,CAAC;KACN,CAAC,CAAC;CACN;;AAED,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3C,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3C,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAc,EAAE;+BAAhB,IAAc;;QAAb,KAAK;QAAE,KAAK;;AACpD,MAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;AACrE,MAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;CACxE,CAAC,SAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC","file":"install-hook.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar http = require(\"http\");\nvar URLMap = require(\"./url-mapping\");\nfunction getURLAsync(URL) {\n    return new Promise(function (resolve, reject) {\n        http.get(URL, function (res) {\n            var body = '';\n            res.setEncoding('utf8');\n\n            res.on('data', function (chunk) {\n                body += chunk;\n            });\n            res.on('end', function (res) {\n                resolve(String(body));\n            });\n        }).on('error', function (e) {\n            reject(\"Got error: \" + e.message);\n        });\n    });\n}\n\nvar posts = getURLAsync(URLMap.posts.json);\nvar items = getURLAsync(URLMap.items.json);\nPromise.all([posts, items]).then(function ([posts, items]) {\n    fs.writeFileSync(path.join(__dirname, \"posts.json\"), posts, \"utf-8\");\n    fs.writeFileSync(path.join(__dirname, \"items.json\"), items, \"utf-8\");\n}).catch(console.error.bind(console));"]}