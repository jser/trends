{"version":3,"sources":["../src/material-store.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;sBACc,QAAQ;;4BACV,eAAe;;;;IAClC,aAAa;cAAb,aAAa;;AACJ,aADT,aAAa,CACH,OAAO,EAAE;8BADnB,aAAa;;AAEX,gCAAO,CAAC;AACR,YAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACvC,mBAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,OAAO,KAAK,WAAW,wEAE7B,IAAI,CAAC,WAAW,CAAC,IAAI,kCAEvC,CAAA;SACJ;AACD,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,KAAK,GAAG,SAAS,CAAC;AACvB,YAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACvB;;AAbC,iBAAa,WAgBf,QAAQ,GAAA,kBAAC,QAAQ,EAAE,OAAO,EAAE;AACxB,YAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACvC,mBAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,mEAE7C,IAAI,CAAC,WAAW,CAAC,IAAI,0DACT,IAAI,CAAC,WAAW,CAAC,IAAI,gBACxC,CAAC;AACF,mBAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,QAAQ,KAAK,WAAW,6LAKhD,CAAA;SACJ;AACD,YAAI,OAAO,OAAO,KAAK,UAAU,EAAE;AAC/B,mBAAO;SACV;AACD,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,YAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KACrC;;;;;;;AAnCC,iBAAa,WAyCf,OAAO,GAAA,iBAAC,OAAO,EAAE;YAET,IAAI,GAEA,OAAO,CAFX,IAAI;YACJ,QAAQ,GACJ,OAAO,CADX,QAAQ;;AAEZ,YAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,UAAU,EAAE;AAChD,gBAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACvC,mBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC7B;KACJ;;;;;;;;;;;;AAlDC,iBAAa,WA6Df,QAAQ,GAAA,kBAAC,QAAQ,EAAE;AACf,YAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC5B,eAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACzD;;;;;;;AAhEC,iBAAa,WAsEf,oBAAoB,GAAA,8BAAC,QAAQ,EAAE;AAC3B,YAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC3C;;;;;;AAxEC,iBAAa,WA6Ef,wBAAwB,GAAA,oCAAG;AACvB,YAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;KACrC;;;;;;;;AA/EC,iBAAa,WAsFf,OAAO,GAAA,iBAAC,cAAc,EAAE;;AAEpB,YAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;KACjC;;;;;;;AAzFC,iBAAa,WA+Ff,QAAQ,GAAA,oBAAG;AACP,eAAO,+BAAa,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACvC;;;;;;;AAjGC,iBAAa,WAuGf,QAAQ,GAAA,kBAAC,QAAQ,EAAE;AACf,YAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,EAAE;AACnC,gBAAI,CAAC,KAAK,GAAG,EAAE,CAAC;SACnB;;AAED,YAAI,CAAC,KAAK,GAAG,+BAAa,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACpD,YAAI,CAAC,UAAU,EAAE,CAAC;KACrB;;;;;;;AA9GC,iBAAa,WAoHf,UAAU,GAAA,sBAAG;AACT,YAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvB;;WAtHC,aAAa;;;qBAwHJ,aAAa","file":"material-store.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {EventEmitter} from \"events\";\nimport objectAssign from \"object-assign\";\nclass MaterialStore extends EventEmitter {\n    constructor(context) {\n        super();\n        if (process.env.NODE_ENV !== 'production') {\n            require(\"assert\")(typeof context !== \"undefined\",\n                `Constructor arguments is undefined.\n                Please \\`new ${this.constructor.name}(context)\\`\n                `\n            )\n        }\n        this.context = context;\n        this.state = undefined;\n        this._handlers = {};\n    }\n\n\n    register(eventKey, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            require(\"assert\")(typeof this.context !== \"undefined\",\n                `Failed register event handler to store.\n                 \"${this.constructor.name}\" has not context.\n                 Please \\`new ${this.constructor.name}(context)\\``\n            );\n            require(\"assert\")(typeof eventKey !== \"undefined\",\n                `register Error: \"eventKey\" is undefined.\n                Failed register event handler to store with eventKey.\n                Please register(eventKey, handler);\n                `\n            )\n        }\n        if (typeof handler !== 'function') {\n            return;\n        }\n        this._handlers[eventKey] = handler.bind(this);\n        this.context._registerStore(this);\n    }\n\n    /**\n     * This handler is dispatched with payload by context module.\n     * @param {object} payload the payload has eventKey and passing arguments.\n     */\n    handler(payload) {\n        let {\n            args,\n            eventKey\n            } = payload;\n        if (typeof this._handlers[eventKey] === \"function\") {\n            var handler = this._handlers[eventKey];\n            handler.apply(this, args);\n        }\n    }\n\n    /**\n     * add listener to \"change\" event.\n     * @param {Function} callback event handler\n     * @return {Function} removeChangeListener function\n     * @example\n     *\n     * let remove = store.onChange(() => {});\n     * remove(); // remove this onChange\n     */\n    onChange(callback) {\n        this.on(\"change\", callback);\n        return this.removeChangeListener.bind(this, callback);\n    }\n\n    /**\n     * remove \"change\" listener\n     * @param {Function} callback event handler\n     */\n    removeChangeListener(callback) {\n        this.removeListener(\"change\", callback);\n    }\n\n    /**\n     * remove all \"change\" events\n     */\n    removeAllChangeListeners() {\n        this.removeAllListeners(\"change\");\n    }\n\n    /**\n     * Waits for the callbacks with the specified IDs to be invoked before continuing execution\n     * of the current callback. This method should only be used by a callback in response\n     * to a dispatched payload.\n     */\n    waitFor(tokensOrStores) {\n        // _waitFor come from context module.\n        this._waitFor(tokensOrStores);\n    }\n\n    /**\n     * Return state object that shallowly clone store's `state`.\n     * @return {object} shallow copied state\n     */\n    getState() {\n        return objectAssign({}, this.state);\n    }\n\n    /**\n     * Update `this.state` with `newState` and notify \"change\" event.\n     * @param {object} newState\n     */\n    setState(newState) {\n        if (typeof this.state === 'undefined') {\n            this.state = {};\n        }\n\n        this.state = objectAssign({}, this.state, newState);\n        this.emitChange();\n    }\n\n    /**\n     * force notify \"change\" event\n     * you should use this instead of `setState()` as force emit \"change\"\n     */\n    emitChange() {\n        this.emit('change');\n    }\n}\nexport default MaterialStore;"]}