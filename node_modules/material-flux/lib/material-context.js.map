{"version":3,"sources":["../src/material-context.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;oBACc,MAAM;;sBACN,QAAQ;;+BACjB,qBAAqB;;;;IAElB,OAAO;cAAP,OAAO;;AACb,aADM,OAAO,GACV;8BADG,OAAO;;AAEpB,gCAAO,CAAC;AACR,YAAI,CAAC,UAAU,GAAG,sBAAgB,CAAC;AACnC,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACrB;;AALgB,WAAO,WAOxB,cAAc,GAAA,wBAAC,KAAK,EAAE;AAClB,YAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACvC,mBAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,wCAAiB,EACpC,gBAAa,KAAK,kFACqB,yCACC,CAC3C,CAAC;SACL;;AAED,YAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAClC,mBAAO;SACV;;AAED,YAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAChE,aAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,aAAK,CAAC,MAAM,GAAG,KAAK,CAAC;AACrB,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;;AAxBgB,WAAO,WA0BxB,QAAQ,GAAA,kBAAC,QAAQ,EAAW;0CAAN,IAAI;AAAJ,gBAAI;;;AACtB,YAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AACrB,oBAAQ,EAAR,QAAQ;AACR,gBAAI,EAAJ,IAAI;SACP,CAAC,CAAC;AACH,YAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,QAAQ,EAAR,QAAQ,EAAE,IAAI,EAAJ,IAAI,EAAC,CAAC,CAAC;KAC3C;;AAhCgB,WAAO,WAkCxB,OAAO,GAAA,iBAAC,cAAc,EAAE;AACpB,YAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;AAChC,0BAAc,GAAG,CAAC,cAAc,CAAC,CAAC;SACrC;AACD,YAAI,aAAa,GAAG,SAAhB,aAAa,CAAG,YAAY,EAAI;AAChC,mBAAO,YAAY,wCAAiB,GAC9B,YAAY,CAAC,MAAM,GACnB,YAAY,CAAC;SACtB,CAAC;AACF,YAAI,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC/C,YAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KACnC;;WA7CgB,OAAO;;;qBAAP,OAAO","file":"material-context.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { Dispatcher } from 'flux';\nimport {EventEmitter} from 'events';\nimport Store from './material-store.js';\n\nexport default class Context extends EventEmitter {\n    constructor() {\n        super();\n        this.dispatcher = new Dispatcher();\n        this._stores = [];\n    }\n\n    _registerStore(store) {\n        if (process.env.NODE_ENV !== 'production') {\n            require(\"assert\")(store instanceof Store,\n                `The store'${store} is not instance of material-store.\\n`\n                + `import {Store} from \"material-flux\"`\n                + `class UserStore extends Store{ ... }`\n            );\n        }\n        // guard for duplicated register\n        if (this._stores.indexOf(store) >= 0) {\n            return;\n        }\n\n        let token = this.dispatcher.register(store.handler.bind(store));\n        store._waitFor = this.waitFor.bind(this);\n        store._token = token;\n        this._stores.push(store);\n    }\n\n    dispatch(eventKey, ...args) {\n        this.dispatcher.dispatch({\n            eventKey,\n            args\n        });\n        this.emit('dispatch', {eventKey, args});\n    }\n\n    waitFor(tokensOrStores) {\n        if (!Array.isArray(tokensOrStores)) {\n            tokensOrStores = [tokensOrStores];\n        }\n        let ensureIsToken = tokenOrStore => {\n            return tokenOrStore instanceof Store\n                ? tokenOrStore._token\n                : tokenOrStore;\n        };\n        let tokens = tokensOrStores.map(ensureIsToken);\n        this.dispatcher.waitFor(tokens);\n    }\n}"]}